name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        options: --env MYSQL_ROOT_PASSWORD=geslo --env MYSQL_DATABASE=todo_db --health-cmd="mysqladmin ping --silent" --health-timeout=10s --health-retries=5 --health-start-period=30s
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Create application.properties for MySQL
        run: |
          echo "spring.datasource.url=jdbc:mysql://localhost:3306/todo_db?useSSL=false&serverTimezone=UTC" > ./backend/src/main/resources/application.properties
          echo "spring.datasource.username=root" >> ./backend/src/main/resources/application.properties
          echo "spring.datasource.password=geslo" >> ./backend/src/main/resources/application.properties
          echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> ./backend/src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=update" >> ./backend/src/main/resources/application.properties
          echo "spring.jpa.show-sql=true" >> ./backend/src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect" >> ./backend/src/main/resources/application.properties
          echo "spring.application.name=ToDo_App" >> ./backend/src/main/resources/application.properties
          echo "server.port=8080" >> ./backend/src/main/resources/application.properties
          echo "server.servlet.context-path=" >> ./backend/src/main/resources/application.properties
          echo "server.error.include-message=always" >> ./backend/src/main/resources/application.properties

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -u root -p'geslo' -e 'SHOW DATABASES'; do
            echo "Waiting for database to be ready..."
            sleep 5
          done

      - name: Build Backend
        run: mvn clean install
        working-directory: ./backend


  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

  test-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -u root -p'geslo' -e 'SHOW DATABASES'; do
            echo "Waiting for database to be ready..."
            sleep 5
          done

      - name: Run Unit Tests
        run: mvn -Dtest=si.um.si.unit_tests.* test
        working-directory: ./backend
